WOULD BE NICE

    ------------------

    Add some client counters, they are useful for debugging.

    ------------------

    Should switch simulator receive packets to be a batch function. It would be much faster then.
    
    ------------------
    
    Add a test case for both unordered and ordered messages to show that it properly handles a message failing to serialize, 

    eg. properly cleans up, sets error state, shuts down the connection.

    Previously, a bug snuck through where messages were not getting cleaned up properly and the server would crash in this situation.

    Adding these tests will make sure this never happens again.

    ------------------

    Add a unit test that intentionally exhausts the client allocator.

    Make sure the server detects this and disconnects that client.

    Make sure client can reconnect to the slot that was exhausted (eg. it is properly cleared).

    ------------------

    Implement "replay" protection. 

    Create a sliding window of last 1024 packets per-encryption mapping.

    If any packet comes in in the last 1024, check if it has already been received, if so, ignore it (don't decrypt). 

    If any packet comes in with sequence # older than the sliding window, discard it.

    Otherwise, process the packet normally.

    =================================================================

    ------------------
    
    Add a test for a very large message send queue (and large # of messages per-packet) with a tiny message receive queue.
    
    This would make sure we never send messages that the reciever can't buffer. Right now it's possible for all the unit tests 
    to pass, even if the code under stress will send messages that the reciever can't buffer.

    ------------------

    Definitely need more usage documentation and samples showing how to do stuff.

    I don't know that it's immediately obvious how to use libyojimbo from the samples. Or, what exactly libyojimbo does or what it's for?

    Also, better documentation could be added explaining what yojimbo is for (dedicated servers), and how its protocol works.

    Perhaps a bunch of posts to gafferongames.com would be a good idea to start?

    ------------------

    Really need to make the matcher HTTPS request asynchronous, can't have it blocking the main thread like it does now!

    ------------------

    Need to get coverity setup to run with a travis job. Right now, it needs to be run manually, by somebody.

    It should be setup to run automatically on each commit to "coverity" branch, then I can create a premake action to determine current branch, mainline or development, and integrate across current head to that branch.

    eg. pm coverity

    ------------------

    It would be great to have stats inside the packet factory for the number of packets created of each type (uint64_t)

    ------------------

    Counters per-packet type in the packet processor, along with stats for the size of each packet serialized would be useful.

    ------------------

    Similarly, per-message type counters inside the connection would be great to help track down large messages (eg. min/max/average per-message type)

    ------------------

    simple_messages.cpp is anything but

    Clean it up, simplify, make it easier to do this.

    ------------------
