WOULD BE NICE

    ------------------

    Implement "replay" protection. 

    Create a sliding window of last 1024 packets per-encryption mapping.

    If any packet comes in in the last 1024, check if it has already been received, if so, ignore it (don't decrypt). 

    If any packet comes in with sequence # older than the sliding window, discard it.

    Otherwise, process the packet normally.

    ------------------

    Implement QoS within the connection, eg. packet loss, latency measurements etc, and make this available to the user to query.

    ------------------

    Extend client connect to take a list of servers to connect to.

    ------------------

    Add some client counters, they are useful for debugging.

    ------------------

    Client doesn't know their client id. It should probably be passed in to client connect.

    ------------------

    Add functionality to connection and client/server to get the set of packet acks, so users can get acks and build their own systems on top of that.

    ------------------

    Definitely need more usage documentation and samples showing how to do stuff.

    I don't know that it's immediately obvious how to use libyojimbo from the samples. Or, what exactly libyojimbo does or what it's for?

    Also, better documentation could be added explaining what yojimbo is for (dedicated servers), and how its protocol works.

    Perhaps a bunch of posts to gafferongames.com would be a good idea to start?

    ------------------

    Really need to make the matcher HTTPS request asynchronous, can't have it blocking the main thread like it does now!

    ------------------

    Need to get coverity setup to run with a travis job. Right now, it needs to be run manually, by somebody.

    It should be setup to run automatically on each commit to "coverity" branch, then I can create a premake action to determine current branch, mainline or development, and integrate across current head to that branch.

    eg. pm coverity

    ------------------

    The connection and channels code seems a bit rough. Should consider a second pass, to see if I can make it simpler. It's hard to understand.

    ------------------

    Clean up profile.cpp with helper methods. It's overly complicated for what it does!

    ------------------