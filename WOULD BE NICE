WOULD BE NICE

    ------------------

    Default allocator should store block size in 4 bytes preceding the allocated block

    This way the default allocator can report on # of bytes allocated.

    Right now it cannot.

    ------------------
    
    Add a test for a very large message send queue (and large # of messages per-packet) with a tiny message receive queue.
    
    This would make sure we never send messages that the reciever can't buffer. Right now it's possible for all the unit tests 
    to pass, even if the code under stress will send messages that the reciever can't buffer.

    ------------------

    Would really like a nice way in debug builds to warn the user about stuff, eg. better than an assert, an assert with a message.

    For example, a lot of asserts seem really low level, but they just mean, OK, you added your own packet types, but forgot to override the callback "CreatePacketFactory".

    The last thing I want is a user experiencing a bunch of really obscure low-level asserts when they are just trying to use the library.
    
    ------------------

    Definitely need more usage documentation and samples showing how to do stuff.

    I don't know that it's immediately obvious how to use libyojimbo from the samples. Or, what exactly libyojimbo does or what it's for?

    Also, better documentation could be added explaining what yojimbo is for (dedicated servers), and how its protocol works.

    Perhaps a bunch of posts to gafferongames.com would be a good idea to start?

    ------------------

    Make sure that all code that creates packets is aware that it could get a NULL value returned. 

    All message and packet create should gracefully handle packet create being NULL and set an error condition on the connection, or ignore, whichever is appropriate.

    ------------------

    Add tests to make sure the client can recover and reconnect after one of the error states below. eg. error is properly cleared.

    ------------------

    Add unit tests for all the new client error states:

        CLIENT_STATE_PACKET_FACTORY_ERROR
        CLIENT_STATE_MESSAGE_FACTORY_ERROR
        CLIENT_STATE_STREAM_ALLOCATOR_ERROR

    ------------------

    Add a unit test that actually exercises the stream allocator.

    ------------------

    Add a unit test that intentionally exhausts the stream allocator.

    ------------------

    Its frustrating that by default the server doesn't print out any reason why it's ignoring a connection request

    This make it hard to see what is going on when something is wrong, and requires I turn on extra logs with #define YOJIMBO_DEBUG_SPAM 1

    It would much be better if it logged these things all the time during client/server/connect tests. The only place it should not log is in unit tests, where lots of failures will occur intentionally, and we don't want to see those spammed to the console.

    ------------------

    ^---- To solve this, provide a callback on connection request deny, challenge response denied, so the user can print out a callback, then print that out in shared.h but only if not in logging mode (unit tests).

    ------------------
    
    Add a test case for both unordered and ordered messages to show that it properly handles a message failing to serialize, eg. properly cleans up, sets error state, shuts down the connection.

    Previously, a bug snuck through where messages were not getting cleaned up properly and the server would crash in this situation.

    Adding these tests will make sure this never happens again.

    ------------------

    Would be nice if a secure client connect accepted a list of servers to try to connect to, instead of having the user need to do that iteration manually, outside the client class. This is how it is meant to be used, after all.

    ------------------

    Really need to make the matcher HTTPS request asynchronous, can't have it blocking the main thread like it does now!

    ------------------

    There are two local matcher implementations:

        Matcher in test.cpp

        LocalMatcher in shared.h

    There should be only one.

    ------------------
