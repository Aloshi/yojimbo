{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"num",
				"numReceivedFragments"
			],
			[
				"packet",
				"packets"
			],
			[
				"MessageRece",
				"MessageReceiveQueueEntry"
			],
			[
				"blo",
				"block"
			],
			[
				"serverAdd",
				"serverAddressString"
			],
			[
				"server",
				"serverAddressString"
			],
			[
				"CONNECTION_EARL",
				"CONNECTION_ERROR_MESSAGE_SEND_QUEUE_FULL"
			],
			[
				"MessageReceiv",
				"MessageReceiveQueueSize"
			],
			[
				"m_mess",
				"m_messageSentPackets"
			],
			[
				"old",
				"oldest_message_id"
			],
			[
				"m_rec",
				"m_receiveMessageId"
			],
			[
				"PACKET_P",
				"PACKET_PROCESSOR_WRITE_PACKET_FAILED"
			],
			[
				"client",
				"client_to_server_key"
			],
			[
				"decr",
				"decryptedMessageLength"
			],
			[
				"CONNECTION",
				"CONNECTION_DENIED_ALREADY_CONNECTED"
			],
			[
				"CLIENT",
				"CLIENT_STATE_CONNECTION_DENIED_FULL"
			],
			[
				"CLIENT_STATE_CONN",
				"CLIENT_STATE_CONNECTION_REQUEST_TIMED_OUT"
			],
			[
				"CLIENT_STAT",
				"CLIENT_STATE_SENDING_CHALLENGE_RESPONSE"
			],
			[
				"CLIENT_STATE",
				"CLIENT_STATE_SENDING_CONNECTION_REQUEST"
			],
			[
				"last",
				"last_packet_send_time"
			],
			[
				"m_last",
				"m_lastPacketReceiveTime"
			],
			[
				"m_clie",
				"m_clientConnected"
			],
			[
				"CLIENT_STATE_",
				"CLIENT_STATE_SENDING_CHALLENGE_RESPONSE"
			],
			[
				"PACKET_",
				"PACKET_CONNECTION_CHALLENGE"
			],
			[
				"CLIENT_S",
				"CLIENT_STATE_SENDING_CONNECTION_REQUEST"
			],
			[
				"SOCKET_ERROR_BIND_",
				"SOCKET_ERROR_BIND_IPV6_FAILED"
			],
			[
				"SOCKET_ERROR",
				"SOCKET_ERROR_SOCKOPT_IPV6_ONLY_FAILED"
			],
			[
				"Cha",
				"ChallengeTimeOut"
			],
			[
				"m_hash",
				"m_challengeHash"
			],
			[
				"ch",
				"ChallengeHashSize"
			],
			[
				"time",
				"last_packet_send_time"
			],
			[
				"Challenge",
				"ServerChallengeEntry"
			],
			[
				"Se",
				"ServerChallengeHash"
			],
			[
				"Chan",
				"ChallengeHashSize"
			],
			[
				"challenge",
				"challenge_entry"
			],
			[
				"PROTOCOL",
				"PROTOCOL2_DECLARE_VIRTUAL_SERIALIZE_FUNCTIONS"
			],
			[
				"aggregate",
				"aggregateReadHeader"
			],
			[
				"PROTOCOL2_ERROR_SER",
				"PROTOCOL2_ERROR_SERIALIZE_HEADER_FAILED"
			],
			[
				"aggreg",
				"aggregatePacketHeader"
			],
			[
				"PROTOCOL2_ERROR_FAIL",
				"PROTOCOL2_ERROR_SERIALIZE_HEADER_FAILED"
			],
			[
				"PROTOCOL2_ERROR",
				"PROTOCOL2_ERROR_CREATE_PACKET_FAILED"
			],
			[
				"MaxPe",
				"MaxPacketsPerIteration"
			],
			[
				"numPackets",
				"numPacketsRead"
			],
			[
				"max",
				"maxPacketsToRead"
			],
			[
				"MaxPackets",
				"MaxPacketsPerIteration"
			],
			[
				"numPAckets",
				"numPacketsWritten"
			],
			[
				"previous",
				"previous"
			],
			[
				"prve",
				"previous"
			],
			[
				"nu",
				"previousChunkNumSlices"
			],
			[
				"force",
				"forceAckPreviousChunk"
			],
			[
				"Packet",
				"PacketBufferEntry"
			],
			[
				"Max",
				"MaxFragmentSize"
			],
			[
				"SERIALIZE_",
				"PROTOCOL2_SERIALIZE_OBJECT"
			],
			[
				"rec",
				"receivedFragments"
			],
			[
				"MaxFrag",
				"MaxFragmentsPerPacket"
			],
			[
				"total",
				"total_fragments"
			],
			[
				"sequence",
				"sequence_difference"
			],
			[
				"MAX",
				"MaxFragmentSize"
			],
			[
				"PROTOCOL2_ERR",
				"PROTOCOL2_STREAM_ERROR_NONE"
			],
			[
				"TEST_PACKET",
				"TEST_PACKET_NUM_TYPES"
			],
			[
				"SYNC_MODE_",
				"SYNC_MODE_ADAPTIVE_SMOOTHING"
			],
			[
				"SYNC_MODE_QU",
				"SYNC_MODE_QUANTIZE_ON_BOTH_SIDES"
			],
			[
				"SYNC",
				"SYNC_MODE_UNCOMPRESSED"
			],
			[
				"min",
				"min_ticks_ahead"
			],
			[
				"old_st",
				"oldest_input_in_packet"
			],
			[
				"ready_to_",
				"ready_to_apply_adjustment_offset"
			],
			[
				"time_",
				"time_last_dropped_input"
			],
			[
				"server_cet",
				"server_get_client_input"
			],
			[
				"Input",
				"InputSlidingWindowSize"
			],
			[
				"ready",
				"ready_to_apply_sync"
			],
			[
				"client_",
				"client_sync_data"
			],
			[
				"tim",
				"time_last_packet_received"
			],
			[
				"PACKET",
				"PACKET_TYPE_CONNECTION_REQUEST"
			],
			[
				"PACKET_TYPE",
				"PACKET_TYPE_INPUT"
			],
			[
				"PACKET_TYPE_",
				"PACKET_TYPE_CONNECTION_DENIED"
			],
			[
				"PACK",
				"PACKET_TYPE_CONNECTION_REQUEST"
			],
			[
				"COMP",
				"COMPRESSION_MODE_ORIENTATION"
			],
			[
				"COM",
				"COMPRESSION_MODE_NO_VELOCITY"
			],
			[
				"position",
				"position_error_dist_squared"
			],
			[
				"pos",
				"position_error"
			],
			[
				"STATE",
				"STATEFUL_MODE_INPUT_AND_STATE"
			],
			[
				"Priority",
				"CubePriorityInfo"
			],
			[
				"Quant",
				"QuantizedPositionBoundXY"
			],
			[
				"Position",
				"QuantizedPositionBoundXY"
			],
			[
				"Quantiz",
				"QuantizedSnapshotWithVelocity"
			],
			[
				"Qua",
				"QuantizedCubeState"
			],
			[
				"linera_",
				"linear_velocity_y"
			],
			[
				"DELTA_MODE",
				"DELTA_MODE_RELATIVE_INDEX"
			],
			[
				"COMPRESSION_MODE",
				"COMPRESSION_MODE_POSITION"
			],
			[
				"abso",
				"absolute_position_bits"
			],
			[
				"absol",
				"absolute_quaternion_bits"
			],
			[
				"ab",
				"absolute_quaternion_bits"
			],
			[
				"Rel",
				"RelativeQuaternionLargeW"
			],
			[
				"quater",
				"quaternion_negative_w"
			],
			[
				"COMPRESSION",
				"COMPRESSION_MODE_QUANTIZE_POSITION"
			],
			[
				"QuantizedPosition",
				"QuantizedPositionBoundXY"
			],
			[
				"snap",
				"snapshot_sequence_buffer"
			],
			[
				"CONTEXT_SNAP",
				"CONTEXT_SNAPSHOT_SLIDING_WINDOW"
			],
			[
				"ntework",
				"network_simulator"
			],
			[
				"snapshot",
				"snapshot_sliding_window"
			],
			[
				"m_ba",
				"m_bandwidthExclude"
			],
			[
				"received",
				"received_snapshot_this_frame"
			],
			[
				"COMPRES",
				"COMPRESSION_MODE_UNCOMPRESSED"
			],
			[
				"INT",
				"SNAPSHOT_INTERPOLATION_HERMITE"
			],
			[
				"SNAPSHOT_MODE_",
				"SNAPSHOT_MODE_LINEAR_INTERPOLATION_10PPS"
			],
			[
				"SNAPSHOT_MODE",
				"SNAPSHOT_MODE_NAIVE_60PPS_JITTER"
			],
			[
				"interpo",
				"interpolation_start_time"
			],
			[
				"inter",
				"interpolation_start_time"
			],
			[
				"SNAPSHOT_IN",
				"SNAPSHOT_INTERPOLATION_HERMITE"
			],
			[
				"SNAPSHOT",
				"SNAPSHOT_INTERPOLATION_LINEAR"
			],
			[
				"LOCK",
				"LOCKSTEP_MODE_DETERMINISTIC"
			],
			[
				"mode",
				"snapshot_mode_data"
			],
			[
				"STONE",
				"STONE_MODE_HDR_TEST"
			],
			[
				"vec",
				"vectorial"
			],
			[
				"new",
				"network_simulator"
			],
			[
				"playout",
				"playout_delay_buffer"
			],
			[
				"LOK",
				"LOCKSTEP_PACKET_INPUTS"
			],
			[
				"in",
				"input_sliding_window"
			],
			[
				"CommandLin",
				"CommandLineBufferSize"
			],
			[
				"model",
				"modelViewProjection"
			],
			[
				"test_stone_board_",
				"test_stone_board_collision_none"
			],
			[
				"mesh",
				"mesh_filename"
			],
			[
				"command",
				"CommandHistorySize"
			],
			[
				"commandHistory",
				"commandHistoryIsEmpty"
			],
			[
				"Stone",
				"stoneSizeNames"
			],
			[
				"vertex",
				"VertexPosition"
			],
			[
				"CLIENT_STT",
				"CLIENT_STATE_CONNECTED"
			],
			[
				"test_client_and_",
				"test_client_and_server_data_reconnect"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 107.0,
		"last_filter": "TODO",
		"selected_items":
		[
			[
				"TODO",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"syntax mark",
				"Set Syntax: Markdown"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"install package",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"package install",
				"Package Control: Install Package"
			],
			[
				"Packinst",
				"Package Control: Install Package"
			],
			[
				"git",
				"Git: Commit history"
			],
			[
				"",
				"Package Control: Discover Packages"
			],
			[
				"Pack",
				"Package Control: Disable Package"
			],
			[
				"Package",
				"Preferences: Browse Packages"
			],
			[
				"Clang",
				"Preferences: SublimeClang Settings – User"
			],
			[
				"Sub",
				"Preferences: SublimeClang Settings – Default"
			],
			[
				"Install",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 416.0,
		"history":
		[
			"print 'hello'",
			"print \"hello\"",
			"ls",
			"ls -al",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": true,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/gaffer/netcode.io"
	],
	"file_history":
	[
		"/Users/gaffer/netcode.io/TODO",
		"/Users/gaffer/libyojimbo/yojimbo_queue.h",
		"/Users/gaffer/libyojimbo/yojimbo_client.cpp",
		"/Users/gaffer/libyojimbo/TODO",
		"/Users/gaffer/libyojimbo/yojimbo_sockets.cpp",
		"/Users/gaffer/libyojimbo/yojimbo_sockets.h",
		"/Users/gaffer/libyojimbo/WOULD BE NICE",
		"/Users/gaffer/libyojimbo/tests/shared.h",
		"/Users/gaffer/libyojimbo/yojimbo_tokens.cpp",
		"/Users/gaffer/libyojimbo/yojimbo_address.cpp",
		"/Users/gaffer/libyojimbo/tests/client.cpp",
		"/Users/gaffer/libyojimbo/tests/test.cpp",
		"/Users/gaffer/libyojimbo/yojimbo_network.cpp",
		"/Users/gaffer/libyojimbo/yojimbo_server.cpp",
		"/Users/gaffer/libyojimbo/yojimbo.cpp",
		"/Users/gaffer/libyojimbo/yojimbo_common.cpp",
		"/Users/gaffer/libyojimbo/tests/server.cpp",
		"/Users/gaffer/libyojimbo/yojimbo_tokens.h",
		"/Users/gaffer/libyojimbo/yojimbo_encryption.h",
		"/Users/gaffer/libyojimbo/yojimbo_encryption.cpp",
		"/Users/gaffer/libyojimbo/windows/sodium/crypto_secretbox.h",
		"/Users/gaffer/libyojimbo/windows/sodium/crypto_aead_chacha20poly1305.h",
		"/Users/gaffer/libyojimbo/windows/mbedtls/config.h",
		"/Users/gaffer/libyojimbo/yojimbo_config.h",
		"/Users/gaffer/libyojimbo/yojimbo_client_server_packets.h",
		"/Users/gaffer/libyojimbo/yojimbo_allocator.h",
		"/Users/gaffer/libyojimbo/yojimbo_allocator.cpp",
		"/Users/gaffer/libyojimbo/docker/copyFiles.bat",
		"/Users/gaffer/libyojimbo/tlsf/tlsf.c",
		"/Users/gaffer/libyojimbo/docker/Dockerfile",
		"/Users/gaffer/libyojimbo/premake5.lua",
		"/Users/gaffer/libyojimbo/.travis.yml",
		"/Users/gaffer/libyojimbo/.git/MERGE_MSG",
		"/Users/gaffer/libyojimbo/tlsf/tlsf.h",
		"/Users/gaffer/Desktop/model.cpp",
		"/Users/gaffer/libyojimbo/yojimbo_address.h",
		"/Users/gaffer/libyojimbo/yojimbo_bit_array.h",
		"/Users/gaffer/libyojimbo/yojimbo_channel.h",
		"/Users/gaffer/libyojimbo/yojimbo_bitpack.h",
		"/Users/gaffer/libyojimbo/yojimbo_client.h",
		"/Users/gaffer/libyojimbo/yojimbo_common.h",
		"/Users/gaffer/libyojimbo/yojimbo_connection.h",
		"/Users/gaffer/libyojimbo/yojimbo_matcher.h",
		"/Users/gaffer/libyojimbo/yojimbo_network_simulator.h",
		"/Users/gaffer/libyojimbo/yojimbo_message.h",
		"/Users/gaffer/libyojimbo/yojimbo_network.h",
		"/Users/gaffer/libyojimbo/yojimbo_packet_processor.h",
		"/Users/gaffer/libyojimbo/yojimbo_packet.h",
		"/Users/gaffer/libyojimbo/yojimbo_platform.h",
		"/Users/gaffer/libyojimbo/yojimbo_replay_protection.h",
		"/Users/gaffer/libyojimbo/yojimbo_sequence_buffer.h",
		"/Users/gaffer/libyojimbo/yojimbo_serialize.h",
		"/Users/gaffer/libyojimbo/yojimbo_server.h",
		"/Users/gaffer/libyojimbo/yojimbo_stream.h",
		"/Users/gaffer/libyojimbo/yojimbo_tlsf.h",
		"/Users/gaffer/libyojimbo/yojimbo_transport.h",
		"/Users/gaffer/libyojimbo/yojimbo.h",
		"/Users/gaffer/libyojimbo/yojimbo_channel.cpp",
		"/Users/gaffer/libyojimbo/yojimbo_connection.cpp",
		"/Users/gaffer/libyojimbo/yojimbo_matcher.cpp",
		"/Users/gaffer/libyojimbo/yojimbo_network_simulator.cpp",
		"/Users/gaffer/libyojimbo/yojimbo_packet_processor.cpp",
		"/Users/gaffer/libyojimbo/yojimbo_packet.cpp",
		"/Users/gaffer/libyojimbo/yojimbo_platform.cpp",
		"/Users/gaffer/libyojimbo/yojimbo_tlsf.cpp",
		"/Users/gaffer/libyojimbo/yojimbo_transport.cpp",
		"/Users/gaffer/libyojimbo/doxygen.config",
		"/Users/gaffer/libyojimbo/docker/matcher/Dockerfile",
		"/Users/gaffer/Documents/IMPORTANT",
		"/Users/gaffer/Documents/HOME",
		"/Users/gaffer/Documents/STUDY",
		"/Users/gaffer/Documents/PLANNING",
		"/Users/gaffer/Documents/Building a Game Network Protocol",
		"/Users/gaffer/Documents/EXERCISE",
		"/Users/gaffer/Documents/CHORES",
		"/Users/gaffer/Documents/BIZDEV",
		"/Users/gaffer/Documents/KARAOKE",
		"/Users/gaffer/Documents/PATREON",
		"/Users/gaffer/Documents/STRATEGY",
		"/Users/gaffer/Documents/TODO",
		"/Users/gaffer/Documents/WISHLIST",
		"/Volumes/Private/references.oo3/contents.xml",
		"/Users/gaffer/keys/domain.key",
		"/Users/gaffer/libyojimbo/DOCUMENTATION NOTES",
		"/Users/gaffer/keys/account.key",
		"/Volumes/Secomba/gaffer/Boxcryptor/Dropbox/Encrypted/Clients/Oculus/NOTES",
		"/Users/gaffer/libyojimbo/tests/profile.cpp",
		"/Users/gaffer/libyojimbo/CHANGES.md",
		"/Users/gaffer/libyojimbo/docs/html/classyojimbo_1_1_server.html",
		"/Users/gaffer/libyojimbo/docs/latex/classyojimbo_1_1_server.tex",
		"/Users/gaffer/libyojimbo/tests/soak.cpp",
		"/Users/gaffer/libyojimbo/docs/html/structyojimbo_1_1_server_client_data.html",
		"/Users/gaffer/libyojimbo/docs/html/yojimbo__tokens_8h_source.html",
		"/Users/gaffer/libyojimbo/docs/xml/index.xml",
		"/Users/gaffer/libyojimbo/docs/html/yojimbo__config_8h_source.html",
		"/Users/gaffer/libyojimbo/docs/xml/namespaceyojimbo.xml",
		"/Users/gaffer/libyojimbo/docs/xml/yojimbo__config_8h.xml",
		"/Users/gaffer/libyojimbo/docs/xml/yojimbo__encryption_8cpp.xml",
		"/Users/gaffer/libyojimbo/.gitignore",
		"/Users/gaffer/libyojimbo/tests/secure_client.cpp",
		"/Users/gaffer/libyojimbo/Makefile",
		"/Users/gaffer/libyojimbo/tests/secure_server.cpp",
		"/Users/gaffer/libyojimbo/BUILDING.md",
		"/Users/gaffer/libyojimbo/tests/connect.cpp",
		"/Users/gaffer/libyojimbo/bin/server",
		"/Users/gaffer/libyojimbo/bin/client",
		"/Users/gaffer/oculus/HOURS",
		"/Users/gaffer/Desktop/TODO",
		"/Users/gaffer/oculus/LOG",
		"/Volumes/FLASH DRIVE/data.txt",
		"/Users/gaffer/oculus/GDC 2015 Example Source Code/src/Cubes/Simulation.h",
		"/Users/gaffer/oculus/GDC 2015 Example Source Code/src/Cubes/Simulation.cpp",
		"/Users/gaffer/oculus/NOTES",
		"/Users/gaffer/Desktop/CARRY ON",
		"/Users/gaffer/oculus/TODO",
		"/Users/gaffer/oculus/CHANGES",
		"/Users/gaffer/oculus/BUGS",
		"/Users/gaffer/oculus/star citizen",
		"/Users/gaffer/Desktop/GENNADIY",
		"/Users/gaffer/git/gafferongames/README.md",
		"/Users/gaffer/git/sbcb-demo/themes/startbootstrap-clean-blog/layouts/partials/tags.html",
		"/Users/gaffer/git/sbcb-demo/themes/startbootstrap-clean-blog/layouts/partials/navbar.html",
		"/Users/gaffer/git/sbcb-demo/themes/startbootstrap-clean-blog/layouts/partials/header.html",
		"/Users/gaffer/git/sbcb-demo/themes/startbootstrap-clean-blog/layouts/partials/ga.html",
		"/Users/gaffer/git/sbcb-demo/themes/startbootstrap-clean-blog/layouts/partials/footer.html",
		"/Users/gaffer/git/sbcb-demo/themes/startbootstrap-clean-blog/layouts/partials/categories.html",
		"/Users/gaffer/git/sbcb-demo/content/post/packet fragmentation and reassembly.md",
		"/Users/gaffer/git/sbcb-demo/content/post/serialization strategies.md"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"-CHANGES,-TODO,-WOULDBENICE",
			"-CHANGES,-TODO",
			"<open files>",
			"-CHANGES,-TODO",
			"<open files>",
			"-CHANGES,-TODO",
			"<open files>",
			"-CHANGES,-TODO",
			"",
			"-CHANGES,-TODO",
			"-CHANGES,TODO",
			"-CHANGES",
			"-CHANGES -TODO",
			"",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"sam/*.h;sam/*.cpp",
			"sam/*.h,sam/*.cpp",
			"sam/*.h sam/*.cpp",
			"*.h *.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h,*.cpp",
			"*.h;*.cpp",
			"*.h *.cpp",
			"",
			"*.h",
			"*.cpp",
			"*.cpp *.h",
			"*.cpp; *.h",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"test_queue",
			"ConnectToNext",
			"Denied",
			"ProcessConenction",
			"ResetBefore",
			"m_socket = ",
			"INVALID_SOCKET",
			"ShutdownConnection",
			"MacBytes",
			"#define",
			"timestamp",
			"time()",
			"timestamp",
			"tlsf",
			"rapidjson",
			"tlsf",
			"yojimbo_tlsf.h",
			"rapidjson",
			"rapid",
			"coverity",
			"scan",
			"scratch buffer",
			"XML",
			"#if !DEBUG",
			"#if DEBUG",
			"DEBUG",
			"m_time",
			"stream allocations",
			"SetEncr",
			"// todo",
			"ResetClientSlot",
			"// todo",
			"TIMEOUTS",
			"CLEAN_DISCONNECT",
			"CLEAN_DISC",
			"TRANSPORT_FLAG_INSECURE_MODE",
			"ResetClient",
			"ResetClientState",
			"// todo",
			"CreateAllocator",
			"CreatePacket",
			"KEEPALIVE",
			" m_transport;",
			"AdvanceTime",
			"Defaults()",
			"BaseServer",
			"DestroyAllocators",
			"fullyConnected",
			"ProcessUserPacket",
			"OnConnectionFragmentReceived",
			"Fragment",
			"See ServerFlags",
			"DisconnectClient",
			"lets you can",
			"it lets you can",
			"another client",
			"another",
			"maximum number",
			"// todo",
			"TransportContext",
			"Context",
			"@see",
			"SERVER_FLAG_ALLOW_INSECURE_CONNECT",
			"connectionTimeOut",
			"connectionNegotiationTimeOut",
			"SERVER_COUNTER_CLIENT_CLEAN_DISCONNECTS",
			"SERVER_COUNTER_CONNECTION_REQUEST_IGNORED_FAILED_TO_GENERATE_CHALLENGE_TOKEN",
			"config.h",
			"AdvanceTime",
			"ChallengeResponse",
			"EncryptChallengeToken",
			"m_challengeTokenNonce",
			"m_serverAddress",
			"SetServerAddress",
			"Timeout",
			"ConnectionContextMagic",
			"v",
			"DefaultEncryptionMappingTimeout",
			"DefaultMaxPacketSize",
			"HIDE",
			"ConservativeConnectionPacketHeaderEstimate",
			"MaxConnectTokenEntries",
			"DefaultEncryptionMappingTimeout",
			"DefaultEncryptionMappingTimeOut",
			"DefaultEncryptionMappingTimeout",
			"MaxContextMappings",
			"AuthBytes",
			"KeepAliveSend",
			"namespace",
			"HIDE_UNDOC",
			"docs",
			"FindEncryption",
			"RemoveEncrypt",
			"context",
			"ContextMapping",
			"Context",
			"_messages()",
			"_messages",
			"_reconn",
			"test_client_server_messages",
			"yojimb",
			"\"",
			"IGNORE",
			"exclude",
			"XML",
			"DefaultAllocator",
			"connect",
			"\"connect",
			"connect",
			"// defined",
			"SECURE_MODE",
			"YOJIMBO_SECURE_CONNECT_ONLY",
			"// #if",
			"YOJIMBO_INSECURE_CONNECT",
			"INSECURE_CONNECT",
			"printf( \"test",
			"#define",
			"7z",
			"electric gays",
			"angular vel",
			"layer",
			"Adaptive",
			"MessagesToSend",
			"Message",
			"ProcessAcks",
			"ReadPacket",
			"ProcessPacketFragment",
			"TEST_MESSAGE"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"YOJIMBO_SECURE_MODE",
			"!YOJIMBO_SECURE_CONNECT_ONLY",
			"SequenceBuffer",
			"sequence_buffer",
			"SequenceBuffer",
			"sliding_window",
			"network_buffer.",
			"NetworkBuffer<",
			"ring_buffer",
			"CORE_ASSERT",
			"CORE_ASSERT_CLOSE",
			"CORE_ASSERT",
			"CORE_CHECK",
			"CORE_ARRAY_NEW",
			"CORE_NEW_ARRAY",
			"CORE_DELETE_ARRAY",
			"CORE_DELETE",
			"CORE_NEW",
			"CORE_ASSERT",
			"Simulator::",
			"memory_globals.",
			"global.",
			"PROTOCOL_CHECK(",
			"PROTOCOL_ASSERT(",
			"assert",
			"bitpacker",
			"    ",
			"namespace sam",
			"namespace sam {",
			"America 2008-2012",
			"netProtocolOld.h"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 355.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Makefile/Make.sublime-build",
	"project": "netcode.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"todo",
				"TODO"
			],
			[
				"test.cpp",
				"libyojimbo/tests/test.cpp"
			],
			[
				"queue",
				"libyojimbo/yojimbo_queue.h"
			],
			[
				"client.cpp",
				"libyojimbo/yojimbo_client.cpp"
			],
			[
				"address.cpp",
				"libyojimbo/yojimbo_address.cpp"
			],
			[
				"queue.h",
				"libyojimbo/yojimbo_queue.h"
			],
			[
				"socket.cpp",
				"libyojimbo/yojimbo_sockets.cpp"
			],
			[
				"sockets.h",
				"libyojimbo/yojimbo_sockets.h"
			],
			[
				"networ",
				"libyojimbo/yojimbo_network.cpp"
			],
			[
				"socket.h",
				"libyojimbo/yojimbo_sockets.h"
			],
			[
				"wouldbenice",
				"libyojimbo/WOULD BE NICE"
			],
			[
				"shared.h",
				"libyojimbo/tests/shared.h"
			],
			[
				"token.cpp",
				"libyojimbo/yojimbo_tokens.cpp"
			],
			[
				"encrypt",
				"libyojimbo/yojimbo_encryption.cpp"
			],
			[
				"encryption.cpp",
				"libyojimbo/yojimbo_encryption.cpp"
			],
			[
				"tokne.h",
				"libyojimbo/yojimbo_tokens.h"
			],
			[
				"token.h",
				"libyojimbo/yojimbo_tokens.h"
			],
			[
				"server",
				"libyojimbo/yojimbo_server.cpp"
			],
			[
				"server.cpp",
				"libyojimbo/tests/server.cpp"
			],
			[
				"common.cpp",
				"libyojimbo/yojimbo_common.cpp"
			],
			[
				"config.h",
				"libyojimbo/yojimbo_config.h"
			],
			[
				"packets.h",
				"libyojimbo/yojimbo_client_server_packets.h"
			],
			[
				".trav",
				"libyojimbo/.travis.yml"
			],
			[
				".bat",
				"libyojimbo/docker/copyFiles.bat"
			],
			[
				"premake5.lua",
				"libyojimbo/premake5.lua"
			],
			[
				"dockerfile",
				"libyojimbo/docker/Dockerfile"
			],
			[
				"premake",
				"libyojimbo/premake5.lua"
			],
			[
				"tlsf.h",
				"libyojimbo/tlsf/tlsf.h"
			],
			[
				"allocator.cpp",
				"libyojimbo/yojimbo_allocator.cpp"
			],
			[
				"pre",
				"libyojimbo/premake5.lua"
			],
			[
				"wouldbe",
				"libyojimbo/WOULD BE NICE"
			],
			[
				"travis",
				"libyojimbo/.travis.yml"
			],
			[
				"address.h",
				"libyojimbo/yojimbo_address.h"
			],
			[
				"doxy",
				"libyojimbo/doxygen.config"
			],
			[
				"docker",
				"libyojimbo/docker/Dockerfile"
			],
			[
				"would",
				"libyojimbo/WOULD BE NICE"
			],
			[
				"server.h",
				"libyojimbo/yojimbo_server.h"
			],
			[
				"yojimbo_server.cpp",
				"libyojimbo/yojimbo_server.cpp"
			],
			[
				"channel.cpp",
				"libyojimbo/yojimbo_channel.cpp"
			],
			[
				"stream.h",
				"libyojimbo/yojimbo_stream.h"
			],
			[
				"doc",
				"DOCUMENTATION NOTES"
			],
			[
				"import",
				"~/Documents/IMPORTANT"
			],
			[
				"home",
				"~/Documents/HOME"
			],
			[
				"transport.h",
				"yojimbo_transport.h"
			],
			[
				"channel.h",
				"yojimbo_channel.h"
			],
			[
				"connection.h",
				"yojimbo_connection.h"
			],
			[
				"packet.h",
				"yojimbo_packet.h"
			],
			[
				"",
				"DOCUMENTATION NOTES"
			],
			[
				"tarnsport.h",
				"yojimbo_transport.h"
			],
			[
				"wouldb",
				"WOULD BE NICE"
			],
			[
				"server.dh",
				"docs/html/structyojimbo_1_1_server_client_data.html"
			],
			[
				"configh",
				"yojimbo_config.h"
			],
			[
				"client.h",
				"yojimbo_client.h"
			],
			[
				"server_packets",
				"yojimbo_client_server_packets.h"
			],
			[
				"encryptio",
				"yojimbo_encryption.h"
			],
			[
				"doy",
				"doxygen.config"
			],
			[
				"doyg",
				"doxygen.config"
			],
			[
				"encryption.h",
				"yojimbo_encryption.h"
			],
			[
				"doxygen",
				"doxygen.config"
			],
			[
				"yojimbo_config.h",
				"yojimbo_config.h"
			],
			[
				"connection.cpp",
				"yojimbo_connection.cpp"
			],
			[
				"config",
				"yojimbo_config.h"
			],
			[
				"y",
				"yojimbo.h"
			],
			[
				"yojimbo.h",
				"yojimbo.h"
			],
			[
				"doyx",
				"doxygen.config"
			],
			[
				"changes",
				"CHANGES.md"
			],
			[
				"_client.cpp",
				"yojimbo_client.cpp"
			],
			[
				"_server.cpp",
				"yojimbo_server.cpp"
			],
			[
				"transport.cpp",
				"yojimbo_transport.cpp"
			],
			[
				".git",
				".gitignore"
			],
			[
				"chang",
				"CHANGES.md"
			],
			[
				"matcher.cpp",
				"yojimbo_matcher.cpp"
			],
			[
				"travis.yml",
				".travis.yml"
			],
			[
				"bitpack.h",
				"yojimbo_bitpack.h"
			],
			[
				"makefile",
				"Makefile"
			],
			[
				"make",
				"Makefile"
			],
			[
				"secure_client",
				"tests/secure_client.cpp"
			],
			[
				"secure_server.cpp",
				"tests/secure_server.cpp"
			],
			[
				"secure_client.cpp",
				"tests/secure_client.cpp"
			],
			[
				"build",
				"BUILDING.md"
			],
			[
				"connect.cpp",
				"yojimbo_connection.cpp"
			],
			[
				"secure",
				"tests/secure_client.cpp"
			],
			[
				"sharde.h",
				"tests/shared.h"
			],
			[
				"clinet.cpp",
				"tests/client.cpp"
			],
			[
				"mesage.h",
				"yojimbo_message.h"
			],
			[
				"log",
				"LOG"
			],
			[
				"notes",
				"NOTES"
			],
			[
				"hours",
				"HOURS"
			],
			[
				"bitpacket.h",
				"developer/Platform/UnrealEngine4/OculusPlatformPlugin/Source/ThirdParty/Oculus/LibOVRPlatform/LibOVRPlatform/include/OVR_Packet.h"
			],
			[
				"risk",
				"RISKS"
			],
			[
				"risks",
				"RISKS"
			],
			[
				"006",
				"protocol2/006_reliable_ordered_messages.cpp"
			],
			[
				"007",
				"protocol2/007_messages_and_blocks.cpp"
			],
			[
				"msesages",
				"protocol2/006_reliable_ordered_messages.cpp"
			],
			[
				"008",
				"protocol2/008_packet_encryption.cpp"
			],
			[
				"messages",
				"protocol2/007_messages_and_blocks.cpp"
			],
			[
				"002",
				"protocol2/002_serialization_strategies.cpp"
			],
			[
				"blocks.cpp",
				"protocol2/007_messages_and_blocks.cpp"
			],
			[
				"network2.h",
				"protocol2/network2.h"
			],
			[
				"protocol2.h",
				"protocol2/protocol2.h"
			],
			[
				"client_server.cpp",
				"protocol2/009_client_server.cpp"
			],
			[
				"004",
				"protocol2/004_sending_large_blocks_of_data.cpp"
			],
			[
				"client",
				"protocol2/009_client_server.cpp"
			],
			[
				"009",
				"protocol2/009_connect_tokens.cpp"
			],
			[
				"003",
				"protocol2/003_packet_fragmentation_and_reassembly.cpp"
			],
			[
				"005",
				"protocol2/005_packet_aggregation.cpp"
			],
			[
				"procesor.cpp",
				"protocol2/yojimbo_packet_processor.cpp"
			],
			[
				"packet_processor.cpp",
				"protocol2/yojimbo_packet_processor.cpp"
			],
			[
				"yoj",
				"protocol2/yojimbo_crypto.h"
			],
			[
				"encryp",
				"protocol2/008_packet_encryption.cpp"
			],
			[
				"premake5",
				"protocol2/premake5.lua"
			],
			[
				"protocol2h",
				"protocol2/protocol2.h"
			],
			[
				"output.txt",
				"protocol2/output.txt"
			],
			[
				"clue2.txt",
				"protocol2/clue2.txt"
			],
			[
				"clues.txt",
				"protocol2/clues.txt"
			],
			[
				"output.tx",
				"protocol2/output.txt"
			],
			[
				"output",
				"protocol2/output.txt"
			],
			[
				"out.u",
				"protocol2/output.txt"
			],
			[
				"output.t",
				"protocol2/output.txt"
			],
			[
				"30",
				"protocol2/obj/x64/Debug/003_packet_fragmentation_and_reassembly/003_packet_fragmentation_and_reassembly.d"
			],
			[
				"yojimbo.cpp",
				"protocol2/yojimbo.cpp"
			],
			[
				"rel",
				"protocol2/006_reliable_ordered_messages.cpp"
			],
			[
				"001",
				"protocol2/001_reading_and_writing_packets.cpp"
			],
			[
				"socket_interface.cpp",
				"protocol2/yojimbo_socket_interface.cpp"
			],
			[
				"packet_processor.h",
				"yojimbo_packet_processor.h"
			],
			[
				"packet",
				"yojimbo_packet_processor.h"
			],
			[
				"network2h",
				"network2.h"
			],
			[
				"yojimbo_con",
				"yojimbo_config.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 404.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 276.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
