DONE    

    Document smaller classes:

        Utility functions

        Address

        Message

        BlockMessage

        MessageFactory

        Document the helper structs used in reliable ordered message (moved back to yojimbo_channel.h)

        Maybe move them inside the reliable-ordered message class? They are really internal implementation classes... Yep. cleaned it up a bit.

        Packet

        PacketFactory

        Packet classes for client/server

        Token support classes and functions

TODO

        Allocator

        Encryption manager

        Packet Processor

        Stream classes

        BitReader, BitWriter

        Network simulator.

        Socket class needs another pass.

        BitArray

        Sequence buffer

        yojimbo_platform.h

        yojimbo_network.h

        yojimbo_matcher.h

        yojimbo_encryption.h

        Serialization macros (if possible)

        Helper macros for packet factories, message factories, setting up allocations in client/server (if possible)

    Wow. There's still so much left to document... I estimate I'm probably only 3/4 done. This is taking so long. It's so much work :(

    =========================================

    Packet fragmentation and reassembly.

    Definitely needed for large snapshot blocks.

    Default to maximum packet size of 8k, so up to 7 ~1200 MTU packets

    Only allow fragmented packets if they are encrypted in secure mode. Unencrypted ones will not be accepted.   

    =========================================

    Implement matcher and extend it to work with redis in real world examples.

    eg. Be a functional matcher that will accept registration information from servers, and match clients to connect to servers.

    =========================================
