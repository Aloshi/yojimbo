DONE    

    Message related functions in client.

    Message related functions in server.

    Serialization macros.

    Helper macros in yojimbo_client.h

    Helper macros in yojimbo_server.h

    Helper macros to define packet factories.

    Helper macros to define message factories.

    Now prepping for release. Checking over everything...

    There is a problem where the windows build gives "TLS handshake error" when it tries to connect to the matcher on windows. What's going on?!

    Checking on MacOS, docker is boned for some reason:

    gafferongames:libyojimbo gaffer$ pm docker
    Running action 'docker'...
    Sending build context to Docker daemon 1.757 MB
    Error response from daemon: Unknown instruction: TAR

    No idea what is going on. Docker install broken on Mac? Try reinstall?

    What's going on Windowns then? Seems like a different issue... This is frustrating.

    Switching back to docker stable. No good reason for me to be on beta...   

    Yeah that fixes it. Seeing if the matcher/client will connect now. If so, then something has broken that's windows specific.

    OK. Docker matcher and everything else is working fine on MacOSX.

    Testing rest of functionality...

    soak passes

    profile is working

    client/server pair is working.

    verified client cannot connect to secure server.

    verified secure_server/secure_client pair.

    Everything seems fine.

    Testing on linux...

    Everything is working fine.

    Trying to run moxygen from the XML generated by doxygen as per this page.

    http://sourcey.com/generating-beautiful-markdown-documentation-with-moxygen/

    Lets see what it looks like. If it's a huge improvement, I'll use it. I'm not a big fan of how doxygen HTML looks. It's pretty oldschool.

    Nope. It's a big step backwards. Sticking with doxygen html for now.

TODO

    =========================================

    Tomorrow I have to work out why the windows build is having trouble with docker. Am I also on beta docker on windows? If so, drop back to stable.

    =========================================

    Is there some automated spell check that I can run on code comments? That would save me a bunch of time.

    =========================================

    Proof read generated documentation. Expand on it. Add more references, etc.

    Make a new release "0.4 - Documentation". It's been a while since the last release. It's time!

    =========================================

    Where to host the generated documentation?

    How to build it automatically and upload it. Is this possible via travis? Wouldn't this create a security issue? (I can't exactly put KEYS in the source code...)

    How do other projects usually do this?

    =========================================

    Packet fragmentation and reassembly.

    Definitely needed for large snapshot blocks.

    Default to maximum packet size of 8k, so up to 7 ~1200 MTU packets

    Only allow fragmented packets if they are encrypted in secure mode. Unencrypted ones will not be accepted.   

    =========================================

    Implement matcher and extend it to work with redis in real world examples.

    eg. Be a functional matcher that will accept registration information from servers, and match clients to connect to servers.

    =========================================
